репозиторий препода: https://github.com/ashipovalov/sqa-046

мой репозиторий: https://github.com/pnmreff/luxoft.java_for_testng

рекомендованные книги:
    Изучаем Java, O'Relly
    Head First Design Pattern, O'Relly
    Thinking in Java
    xUnit Test Pattern

сборку делаем через Gradle.
особенности: не перекомпиливает весь проект, только измененные файлы
Основные команды:
build,
run,
wrapper: создает в папке проекта файлы gradlew, gradle. Нужно когда пересылают проект, при запуске команды gradlew run, если не установлен gradle, запускает скачивание.


интересные статьи:
https://www.ibm.com/developerworks/ru/library/j-cq09187/index.html
https://en.wikipedia.org/wiki/Behavior-driven_development
https://habr.com/post/332754/


14/06/2018
подключаем testng к проекту
ссылки: http://search.maven.org/#artifactdetails%7Corg.testng%7Ctestng%7C6.14.3%7Cjar
        https://docs.gradle.org/current/userguide/dependency_management_for_java_projects.html
добавляем их в проект и обновляем проект на вкладке gradle(Refresh button)

тестовые методы всегда имеют тип void.
нужно пометить метод как тестовый: аннотация @Test
если класс помечен аннотацией @Test то TestNG запускает все методы помеченные этой аннотацией или все публичные методы и только после этого уничтожает объект класса.
Junit создает объект запускает один публичный метод, уничтожает объект класса, потом опять создает объект класса и запускает следующий публичный метод. Сделано это следуя принципу что методы тестирования должны быть максимально независимы.

assert - ключевое слово java, выбрасывает исключение определенного типа. парсит строку из двух параметров и оператора сравнения.
Assert - класс фреймворка TestNG, где много static.




